variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

image: maven:3.6.3-jdk-11

cache:
  key: "$CI_JOB_NAME"
  paths:
    - .m2/repository

verify:jdk11:
  stage: test
  script:
    - 'mvn -f de.uniba.swt.dsl.parent/pom.xml $MAVEN_CLI_OPTS clean verify'
  except:
    - develop

install:jdk11:
  stage: deploy
  script:
    - 'mvn -f de.uniba.swt.dsl.parent/pom.xml $MAVEN_CLI_OPTS clean install'
    - 'apt-get update -y && apt-get install -y xattr'
    - 'sh post-build.sh'
  artifacts:
    paths:
    - build/BahnIDE-macosx.cocoa.x86_64.tar.gz
    - build/BahnIDE-linux.gtk.x86_64.tar.gz
    - build/BahnIDE-win32.win32.x86_64.zip
    expire_in: 1 week
  only:
    - develop