/*
 * generated by Xtext 2.20.0
 */
package de.uniba.swt.dsl.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import de.uniba.swt.dsl.bahn.RootModule

@ExtendWith(InjectionExtension)
@InjectWith(BahnInjectorProvider)
class FunctionCallExprParsingTest {
	
	@Inject extension ParseHelper<RootModule>
	@Inject extension ParserTestHelper

	@Test
	def void testEmptyFunctionCallExpr() {
		'''
			module test def test()
			    string route_ids[100]
				get_all_routes(route_ids)
			end end
		'''.parse.assertNoParsingErrors
	}

	@Test
	def void testSingleParamFunctionCallExpr() {
		'''
			module test def test()
			    string id = "0"
				clear_route(id)
			end end
		'''.parse.assertNoParsingErrors
	}

	@Test
	def void testParamsFunctionCallExpr() {
		'''
			module test def test()
			    string route_id = "0"
			    string train_id = "train1"

				bool res = is_route_available(route_id, train_id)
			end end
		'''.parse.assertNoParsingErrors
	}
}
