/*
 * generated by Xtext 2.20.0
 */
package de.uniba.swt.expr.validation;


import de.uniba.swt.expr.bahnexpr.*;
import org.eclipse.emf.common.util.EList;
import org.eclipse.xtext.validation.Check;

import java.util.Objects;

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
public class BahnExprValidator extends AbstractBahnExprValidator {

    @Check
    public void typeCheckingExpression(Expression expression) {
        try {
            ExpressionValidator.validate(expression);
        } catch (ValidationException e) {
            error(e.getMessage(), e.getFeature());
        }
    }

    @Check
    public void typeCheckingStatement(Statement statement) {
        try {
            StatementValidator.validate(statement);
        } catch (ValidationException e) {
            error(e.getMessage(), e.getFeature());
        }
    }

    @Check
    public void mainFuncRequired(BahnExpr bahnExpr) {
        boolean hasMain = bahnExpr.getDecls() != null
                && bahnExpr.getDecls().stream().anyMatch(d -> Objects.equals(d.getName().toLowerCase(), "main"));
        if (!hasMain) {
            error("Main function is required", BahnexprPackage.Literals.BAHN_EXPR__DECLS);
        }
    }
}
