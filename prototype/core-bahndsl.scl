module SWTbahn
    # define all signal aspects
    aspects
        yellow 0x02
        green 0x01
        red 0x00
        on 0x00
        off 0x01
        normal 0x00
        reserve 0x01
    end

    # define all board, each board has ID and unique address
    boards
        master 0xDA000D680052EF "main board"
            features 
                0x03 0x14 "seckack on, 200ms"
                0x6E 0x00 "track output default off"
            end
        lightcontrol 0x05000D6B0083EC
        onecontrol 0x05000D7500DBED
    end

    # define all segments on a board, each segment has ID and Address
    segments master
        seg1 0x00
        seg2 0x01
        seg3 0x02
        seg4 0x03
    end

    # define signals on a board, each board has ID, number and aspects
    signals lightcontrol
        signal1 0x00 
            aspects 
                yellow 
                green 
                red 
            end 
            initial red
        signalends 0x12 
            aspects
                on 0x00
                off 0x01
            end
            initial on
    end

    # define all points on a board, each point has ID, number and initial aspect, always has 2 aspects: normal and reserve
    points onecontrol
        point1 0x00 
            block block2b
            aspects 
                normal 0x00:block2 -- block3b
                reverse 0x01:block2 -- block3a
            end
            initial normal
        point2 0x00 
            block block3c
            aspects 
                normal:block3a -- block5a, block3b -- block5b
                reverse:block3a -- block5b, block3b -- block5a
            end
            initial normal
        point4 0x00 
            block block1a
            aspects 
                normal:seg1->seg2, seg3->seg4 
                reverse:seg1->seg4, seg3->seg2 
            end
            initial normal
    end

    # define all blocks by combining defined segments and signals
    blocks
        block1a main:seg5 <-> 
        block1 buffer:seg1, signal1 <-> main:seg2 <-> buffer:seg3, signal3
        block2 buffer:seg1, signal1 -> main:seg2
        block3 main:seg2 <- buffer: seg3, signal3
        block4 main:seg2 <- buffer: seg3, signal3
    end

    # trains
    trains
        cargo_db 0x0001 steps 126 calibration 5, 15, 30, 45, 60, 75, 90, 105, 120 end weight 100
            peripherals
                head_light bit 4 initial 1
                cabin_light bit 0 initial 1
            end
        regional_odeg 0x0002 steps 126 calibration 5, 15, 30, 45, 60, 75, 90, 105, 120 weight 100
            peripherals
                head_light bit 4 initial 1
                cabin_light bit 0 initial 1
            end
        regional_brengdirect 0x0004 steps 126 calibration 5, 15, 30, 45, 60, 75, 90, 105, 120 weight 100
            peripherals
                head_light bit 4 initial 1
                cabin_light bit 0 initial 1
            end
        cargo_bayern 0x0005 steps 126 calibration 5, 15, 30, 45, 60, 75, 90, 105, 120 weight 100
            peripherals
                head_light bit 4 initial 1
                cabin_light bit 0 initial 1
            end
        cargo_green 0x0006 steps 126 calibration 5, 15, 30, 45, 60, 75, 90, 105, 120 weight 100
            peripherals
                head_light bit 4 initial 1
            end
    end

    # layout
    layout
        block1 -- block2 -- block2b
        block2b -- block3a -- block3c
        block2b -- block3b -- block3c
        block3c -- block5b -- block1a
        block3c -- block5a -- block1a
        block1a -- block1
    end

    # train station platform config
    platform
        length_unit cm
        weight_unit gr
        direction clockwise
        train_types cargo, passenger
        length 300
    end
end